//ПЕРЕМЕННЫЕ
//В реальной жизни, когда играем в подобную игру, у нас есть карты(8), которые мы случайно перетосовываем RESHUFFLE(Carts);
//"Колода карт"
var Carts = ['RED', 'RED', 'BLU', 'BLU', 'PINK', 'PINK', 'YELLOW', 'YELLOW', 'GREEN', 'GREEN', 'GRAY', 'GRAY', 'BLUE', 'BLUE', 'ORANGE', 'ORANGE']

var start = false; //старт игры
var choices = []; //список с выбранными картами (записываются цвета)
var IDs = []; //и их ID
// и если первые два элемента из choices - совпадают. Например первый выбор - RED и второй тоже RED, и длина
//(A) списка IDs = 3 (3 - это сделанно для того, что бы отображалась вторая карта, иначе при нажатии на вторую карту (если их цвета не совпадут)
// она не проявится. Это не хорошо)))
//Время, секунды и минуты
var sec = 0;
var min = 0;
//ФУНКЦИИ
//Функция RANDOM(min, max), в интернет js учебниках есть.
function RANDOM(min, max) {
  return Math.floor(Math.random() * (max - min) + min);
}

//Функция перетосовки карт
function RESHUFFLE(arr) {
  var brr = []; //Сюда складываются перетосованные карты
  //от оставшейся длины списка карт, по рандомному индексу, берем карту и претыскиваем в претосованную колоду
  while (arr.length > 0) { //пока все карты не перемешаются (пока список карт не пуст)
    let rnd = RANDOM(1, arr.length)-1;
    //добавляем случайную карту(из колоды карт) в колоду перемешанных карт
    brr.push(arr[rnd]);
    arr.splice(rnd, 1);
  }
  return brr; //возвращаем перемешанную колоду
}

//активируется при каждом нажатии на одну из карт (отправляется адрес карты)
function step(id) {
  //если кнопку "старт" нажали (если игра началась)
  if (start == true) {
    //по адресу карты узнаём её "спрятанный" цвет
    color = Carts[id];

    //записываем в список наших выборов
    choices.push(color);
    console.log("choices: " + choices); //проверка, для разработчика (тоесть - для меня)
    //записываем её id
    IDs.push(id);
    console.log("IDs: " + IDs); //проверка, для разработчика (тоесть - для меня)

    document.getElementById(id).className = 'cell ' + color; //Переписываем класс элемента с её "цветом" в CSS файле
    //прописаны инструкции как отображать каждый цвет и как отображать элементы "cell". класс "cell RED" будет отображать как RED и как cell
    //одновременно
  }
  Game(); // функция для проверки нашего выбора (совпадают ли цвета выбранных карт)
}

function Game() {
  console.log("GAme F worked"); //проверка, для разработчика (тоесть - для меня)
  if (IDs.length == 3 && choices.length == 3) { // если длина списков IDs и длина choices - равны 3, значит можно начать проверку
    if (choices[0] !== choices[1]) {
      // и если цвета выбранных 1-ых 2-ух карт различаются, то по списку их ID "прячим" их цвета
      document.getElementById(IDs[0]).className = 'cell';
      document.getElementById(IDs[1]).className = 'cell';
      console.log("GAme F worked TOO!!!!"); //проверка, для разработчика (тоесть - для меня)
    }
    // в противном случае:
    // и оставляем цвета этих карт, после анулируем choices и IDs для следующих выборов карт.
    // Но т.к. я записываю туда не 2-е а 3-и выбора (причину указывал где-то выше, марочка (A)), то тут пришлось повозится
    // первые 2 выбора удаляются, 3-ий становится первым
    var a = choices[2];
    var b = IDs[2];
    // а ведь можно было бы сделать по другому, но мне показалось, что так будет "надёжней"
    choices = [];
    IDs = [];
    choices.push(a);
    IDs.push(b);
    console.log("After " + "choices: " + choices + " IDs: " + IDs); //проверка, для разработчика (тоесть - для меня)
  }
  Win() //запускаем проверку окончания игры
}

function Start() { //при нажатии кнопки старт
  for (var i = 0; i < 16; i++) { //очищаем поле
    document.getElementById(i).className = 'cell';
  }
  //Перетосовываем карты
  Carts = RESHUFFLE(Carts);

  //устанавливаем время таймера и "активируем" игровые функции
  start = true;
  sec = 0;
  min = 2;
}

function Win() {
  var a = 0;
  //если все элементы заполнены цветом (тоесть, мы нашли все пары)
  //реализованно это так: если по текущему id название класса элемента == "cell" a += 1 недостающая пара
  for (var i = 0; i < 16; i++) {
    if (document.getElementById(i).className == 'cell') {
      a += 1;
    }
  }
  //если a == 0, значит все элементы по id были "закрашенными" (если все элементы "закрашенные", значит "a" не будет увеличиваться)
  //тогда заканчиваем игру
  if (a == 0) {
    alert("Вы выйграли!");
    start = false; //игра заканчивается (все игровые функции "выключаются")
  }
}

//таймер мне так и не удалось реализовать
//но вот как он должен был работать
function Timer() {
  //          ↓каждые 1000 млСекунд (1 секунда)
  setTimeout(TimeCount, 1000);
}

function TimeCount() {
  //уменьшаем переменную с секундами
  sec -= 1;
  if (sec < 0) { //если она меньше нуля => счетсик секунд = 60 и -1 минута времени
    sec = 60;
    min -= 1;
  }

  if (min <= 0 && sec <= 0) { //если "время" таймера == 0, значит вы не успели и мы заканчиваемигру
    alert("Вы не успели!");
    start = false;
  }
  console.log(min);
  console.log(sec);
}

//после нажатии кнопки старт, должен запустится таймер
while (start == true) {
 Timer(); //сама функция таймера
 document.getElementById("time").innerHTML = min + ':' + sec; //транслируем время
}
